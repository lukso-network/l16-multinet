apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: teku-catalyst
  labels:
    app: multinet
    tier: teku-catalyst
spec:
  replicas: {{ .Values.TEKU_CATALYST_NODES }}
  serviceName: teku-catalyst
  selector:
    matchLabels:
      tier: teku-catalyst
  template:
    metadata:
      generateName: teku-catalyst-
      labels:
        tier: teku-catalyst
    spec:
      volumes:
        - name: deposits
          persistentVolumeClaim:
            claimName: deposits-storage
        - name: common-data
          persistentVolumeClaim:
            claimName: common-data
      containers:
        - name: catalyst
          image: silesiacoin/ssc20-client:v002
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /root/multinet/repo/deposits
              name: deposits
            - mountPath: /root/multinet/repo/data
              name: common-data
          command: [ "bash", "-c" ]
          ports:
            - containerPort: 8545
            - containerPort: 30303
          args:
            - ./geth --rpc --rpcapi net,eth,eth2 --etherbase 0x1000000000000000000000000000000000000000 --datadir /root/multinet/repo/data/$(MULTINET_POD_NAME) --rpccorsdomain "*" --rpcaddr "$MULTINET_POD_IP" --verbosity 5 --ethstats "$MULTINET_POD_NAME:$CATALYST_STATS_LOGIN_SECRET@$CATALYST_STATS_HOST:80"
          # inject environment variables
          env:
            - name: MULTINET_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MULTINET_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CATALYST_STATS_LOGIN_SECRET
              value: "{{ .Values.CATALYST_STATS_LOGIN_SECRET }}"
            - name: CATALYST_STATS_HOST
              value: "{{ .Values.CATALYST_STATS_HOST }}"
        - name: teku
          image: silesiacoin/ssc20-client:v002
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /root/multinet/repo/deposits
              name: deposits
            - mountPath: /root/multinet/repo/data
              name: common-data
          command: [ "bash", "-c" ]
          ports:
            - containerPort: 9000
            - containerPort: 4000
            - containerPort: 5051
          args:
            - case $MULTINET_POD_NAME in teku-catalyst-1) $INTEROP_START_INDEX=11 ;; teku-catalyst-2) $INTEROP_START_INDEX=23 ;; teku-catalyst-3) $INTEROP_START_INDEX=31 ;; teku-catalyst-4) $INTEROP_START_INDEX=47 ;; teku-catalyst-5) $INTEROP_START_INDEX=59 ;; teku-catalyst-6) $INTEROP_START_INDEX=71 ;; teku-catalyst-7) $INTEROP_START_INDEX=83 ;; esac; echo "starting with Interop index $INTEROP_START_INDEX"; ./teku/bin/teku --Xinterop-enabled=true --Xinterop-owned-validator-count=64 --network=minimal --p2p-enabled=true --p2p-discovery-enabled=true --initial-state /root/multinet/repo/data/testnet/genesis.ssz --eth1-engine http://$MULTINET_POD_IP:8545 --rest-api-interface=$MULTINET_POD_IP --rest-api-host-allowlist="*" --rest-api-port=5051 --logging=all --rest-api-enabled=true --metrics-enabled=true --p2p-discovery-bootnodes=$TEKU_BOOTNODE_ENR --Xinterop-owned-validator-start-index $INTEROP_START_INDEX
          env:
            - name: INTEROP_START_INDEX
              value: "0"
            - name: MULTINET_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MULTINET_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: TEKU_BOOTNODE_ENR
              value: "{{ .Values.TEKU_BOOTNODE_ENR }}"
        - name: eth2stats-client
          image: silesiacoin/eth2stats-client:v1teku
          imagePullPolicy: IfNotPresent
          args: [ "run", "--v", "--eth2stats.node-name", "$(MULTINET_POD_NAME)", "--eth2stats.addr", "eth2stats:9090", "--eth2stats.tls=false", "--beacon.type", "v1", "--beacon.addr", "http://$(MULTINET_POD_IP):5051" ]
          env:
            - name: MULTINET_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MULTINET_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      initContainers:
        - name: genesis
          image: silesiacoin/ssc20-client:v002
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /root/multinet/repo/deposits
              name: deposits
            - mountPath: /root/multinet/repo/data
              name: common-data
          command: [ "bash", "-c" ]
          args:
            - echo "test0"; rm -rf /root/multinet/repo/data/$(MULTINET_POD_NAME); echo "test"; mkdir -p /root/multinet/repo/data/$(MULTINET_POD_NAME); echo "$GENESIS_BODY" > /root/multinet/repo/data/testnet/genesis.json; ./geth --datadir /root/multinet/repo/data/$(MULTINET_POD_NAME) init /root/multinet/repo/data/testnet/genesis.json; ./bootnode -nodekeyhex $(cat /root/multinet/repo/data/$MULTINET_POD_NAME/geth/nodekey) -writeaddress > /root/multinet/repo/data/$MULTINET_POD_NAME/enode.txt; echo "works" > /root/multinet/repo/data/$(MULTINET_POD_NAME)/testingA.txt; ./teku/bin/teku genesis mock --output-file /root/multinet/repo/data/testnet/genesis.ssz --eth1-block-hash $ETH_1_BLOCK_HASH --genesis-time $GENESIS_TIME --validator-count $ETH2_VALIDATORS; echo "$STATIC_NODES" > /root/multinet/repo/data/$(MULTINET_POD_NAME)/static-nodes.json; echo "$STATIC_NODES" > /root/multinet/repo/data/$(MULTINET_POD_NAME)/trusted-nodes.json;
          # inject environment variables
          env:
            - name: MULTINET_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MULTINET_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            # Genesis parameters
            - name: NIMBUS_NODES
              value: "{{ .Values.NIMBUS_NODES }}"
            - name: NIMBUS_DEV_NODES
              value: "{{ .Values.NIMBUS_DEV_NODES }}"
            - name: NIMBUS_VALIDATORS
              value: "{{ .Values.NIMBUS_VALIDATORS }}"
            - name: LIGHTHOUSE_NODES
              value: "{{ .Values.LIGHTHOUSE_NODES }}"
            - name: LIGHTHOUSE_DEV_NODES
              value: "{{ .Values.LIGHTHOUSE_DEV_NODES }}"
            - name: LIGHTHOUSE_VALIDATORS
              value: "{{ .Values.LIGHTHOUSE_VALIDATORS }}"
            - name: PRYSM_NODES
              value: "{{ .Values.PRYSM_NODES }}"
            - name: PRYSM_DEV_NODES
              value: "{{ .Values.PRYSM_DEV_NODES }}"
            - name: PRYSM_VALIDATORS
              value: "{{ .Values.PRYSM_VALIDATORS }}"
            - name: GENESIS_BODY
              value: {{ .Files.Get "genesis.json" | toJson }}
            - name: ETH_1_BLOCK_HASH
              value: "{{ .Values.ETH_1_BLOCK_HASH }}"
            - name: STATIC_NODES
              value: {{ .Files.Get "static-nodes.json" | toJson }}
            - name: GENESIS_TIME
              value: "{{ .Values.ETH_2_GENESIS_TIME }}"
            - name: ETH2_VALIDATORS
              value: "{{ .Values.ETH_2_VALIDATORS }}"
